from AvlConstants import Avl

hex_strig = '00000000000003b8080d00000184a5693b8001098072b41b4d26c900ac005d0b0000480b04150545010101fa010242419518000004f10000558ec70000000010002ad2fe4800000047014cf80316a117f7ff2800000184a56927f801098072b41b4d26c900ac005d0b0000480b04150545010101fa010242416518000004f10000558ec70000000010002ad2fe4800000048014cf80316a117f7ff2800000184a568ed60010980721e1b4d270c00ab00600b0000480b04150545010101fa010242415618000004f10000558ec70000000b10002ad2fe4800000047014cf80316a117f7ff2800000184a568b2c80109806c851b4d26fb00a80116090000480b04150545010101fa010242415618000004f10000558ec70000000010002ad2f34800000048014cf80316a117f7ff2800000184a5689f400109806c851b4d26fb00a801160a0000480b04150545010101fa010242417718000004f10000558ec70000002b10002ad2f34800000047014cf80316a117f7ff2800000184a566da2001098070b01b4d2fa300990060070000480b04150545010101fa01024240f318000004f10000558ec70000000010002ad28e4800000048014cf80316a117f7ff2800000184a5669f8801098070b01b4d2fa300990060060000480b04150545010101fa010242415d18000004f10000558ec70000000010002ad28e4800000049014cf80316a117f7ff2800000184a5668c0001098070b01b4d2fa300990060070000480b04150545010101fa010242419e18000004f10000558ec70000000010002ad28e4800000048014cf80316a117f7ff2800000184a5616f680109806c961b4d2bab008100f3060000480b04150545010101fa0102423c3718000004f10000558ec70000000010002ad25a4800000049014cf80316a117f7ff2800000184a56134d001098072e61b4d2d2a007b0027080000480b04150545010101fa0102423c4a18000004f10000558ec70000000010002ad25a480000004a014cf80316a117f7ff2800000184a561214801098072e61b4d2d2a007b0027070000480b04150545010101fa0102423eff18000004f10000558ec70000000010002ad25a4800000049014cf80316a117f7ff2800000184a55ebfe80109806ecc1b4d315500680105080000480b04150545010101fa010242412718000004f10000558ec70000000010002ad231480000004a014cf80316a117f7ff2800000184a55eb0480109806f301b4d312300680105080000480b04150545010101fa01024241a118000004f10000558ec70000000010002ad231480000004b014cf80316a117f7ff280d0000e3a5'
correct_crc = 58277


class Crc16Ibm:
    @staticmethod
    def isCorrect(data):
        """
        CRC-16/IBM
        :param data: hex string of data
        :return: if crc is calculated correctly
        """

        data_for_crc = data[Avl.codec_id_start:Avl.crc_16_start]
        byte_array = bytearray.fromhex(data_for_crc)
        crc = 0
        for current_byte in byte_array:
            crc = crc ^ current_byte

            for bit in range(0, 8):
                carry = crc & 1
                crc = crc >> 1
                if carry == 1:
                    ibm_value_int = 0xA001
                    crc = crc ^ ibm_value_int

        if crc == int(data[Avl.crc_16_start:], 16):
            print(f"Correct crc: {crc}")
            return True
        else:
            print(f"False crc! Calculated: {crc}, given: {int(data[Avl.crc_16_start:], 16)}")
            return False


if __name__ == "__main__":
    isCorrect = Crc16Ibm.isCorrect(hex_strig)
